{"version":3,"sources":["components/ContactForm/ContactFrom.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactListItem/ContactItem.module.css","shared/Title/Title.module.css","shared/Notify/Notification.module.css","components/ContactsList/ContactsList.module.css","shared/Title/Title.jsx","shared/Notify/Notification.jsx","redux/contactsAct.js","redux/contactsOperations.js","redux/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/filterAct.js","components/Filter/Filter.jsx","components/ContactsList/ContactListItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/App/App.jsx","redux/contactsReducer.js","redux/filterReducer.js","redux/store.js","index.js"],"names":["module","exports","Title","CSSTransition","in","appear","timeout","classNames","css","unmountOnExit","className","title","Notification","isContacts","notification","addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","axios","defaults","baseURL","onAddContact","name","number","dispatch","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","item","toLowerCase","includes","getItemById","itemId","find","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","task","props","setTimeout","this","PhoneBookForm","onSubmit","label","input","type","onChange","required","inputBtn","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","filterContacts","onChangeFilter","length","ownProps","itemText","btn","onClick","findContacts","TransitionGroup","component","list","map","App","contactsReducer","createReducer","_","action","payload","filterReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1581727.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneBookForm\":\"ContactFrom_PhoneBookForm__3L2Tf\",\"input\":\"ContactFrom_input__1CLdb\",\"label\":\"ContactFrom_label__7XPB7\",\"inputBtn\":\"ContactFrom_inputBtn__Dl_jB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3IwaY\",\"input\":\"Filter_input__e_hHT\",\"label\":\"Filter_label__2I2n-\",\"enter\":\"Filter_enter__2k5p2\",\"enterActive\":\"Filter_enterActive__v92Ps\",\"exit\":\"Filter_exit__3hGXe\",\"exitActive\":\"Filter_exitActive__15ody\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2bwIl\",\"itemText\":\"ContactItem_itemText__cA-3E\",\"btn\":\"ContactItem_btn__wXEOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__e4bGm\",\"appear\":\"Title_appear__s9F6x\",\"appearActive\":\"Title_appearActive__3pw0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__B1vQZ\",\"enter\":\"Notification_enter__1M6Ya\",\"enterActive\":\"Notification_enterActive__1PxL9\",\"exit\":\"Notification_exit__kZIOs\",\"exitActive\":\"Notification_exitActive__2gth8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2DbC5\",\"enter\":\"ContactsList_enter__2CKXB\",\"enterActive\":\"ContactsList_enterActive__546Le\",\"exit\":\"ContactsList_exit__1gUin\",\"exitActive\":\"ContactsList_exitActive__2hYKT\"};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport css from './Title.module.css';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <CSSTransition \r\n    in={true} \r\n    appear={true} \r\n    timeout={500} \r\n    classNames={css}\r\n    unmountOnExit>\r\n    <h1 className={css.title}>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport css from './Notification.module.css';\r\n\r\nconst Notification = ({isContacts}) => {\r\n  return (\r\n    <CSSTransition\r\n    in={isContacts}\r\n    appear={true}\r\n    timeout={250}\r\n    classNames={css}\r\n    unmountOnExit \r\n    >\r\n      <div className={css.notification}>\r\n      <p>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Notification;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactsRequest = createAction('ADD_CONTACTS_REQUEST');\r\nconst addContactsSuccess = createAction('ADD_CONTACTS_SUCCESS');\r\nconst addContactsError = createAction('ADD_CONTACTS_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('FETCH_CONTACTS_REQUEST');\r\nconst fetchContactsSuccess = createAction('FETCH_CONTACTS_SUCCESS');\r\nconst fetchContactsError = createAction('FETCH_CONTACTS_ERROR');\r\n\r\nconst removeContactsRequest = createAction('REMOVE_CONTACTS_REQUEST');\r\nconst removeContactsSuccess = createAction('REMOVE_CONTACTS_SUCCESS');\r\nconst removeContactsError = createAction('REMOVE_CONTACTS_ERROR');\r\n\r\nexport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n};","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nimport axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from './contactsAct';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst onAddContact = ({name, number}) => dispatch => {\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', {name, number})\r\n    .then(({data}) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({data}) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(removeContactsSuccess(id)))\r\n    .catch(error => dispatch(removeContactsError(error)));\r\n};\r\nexport default { onAddContact, fetchContacts, removeContact };","/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\n\r\nimport {createSelector} from \"reselect\"\r\n\r\nconst getContacts = (state) => state.contacts\r\n\r\nconst getFilter = (state) => state.filter\r\n\r\nconst getItemById = (state, itemId) => {\r\n  const contacts = getContacts(state)\r\n  return contacts.find((item) => item.id === itemId)\r\n}\r\nconst getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  return contacts.filter((item) => item.name.toLowerCase().includes(filter))\r\n})\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getItemById,\r\n  getFilteredContacts,\r\n}\r\n","import React, {Component} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// import {v4 as uuid} from \"uuid\"\r\nimport Notification from \"../../shared/Notify/Notification\"\r\nimport css from \"../ContactForm/ContactFrom.module.css\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport contactsOperations from \"../../redux/contactsOperations\"\r\nimport contactsSelectors from '../../redux/contacts-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isContacts: false,\r\n  }\r\n\r\n  handleChange = ({target}) => {\r\n    const {name, value} = target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const task = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n\r\n    if (this.props.contacts.find(({name}) => name === task.name)) {\r\n      this.setState({isContacts: true})\r\n      setTimeout(() => this.setState({isContacts: false}), 4000)\r\n      return\r\n    }\r\n\r\n    this.props.onAddContact(task)\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {name, number, isContacts} = this.state\r\n    return (\r\n      <>\r\n        <Notification isContacts={isContacts} />\r\n        <form className={css.PhoneBookForm} onSubmit={this.handleSubmit}>\r\n          <label className={css.label}>\r\n            Name\r\n            <input className={css.input} name=\"name\" type=\"text\" value={name} onChange={this.handleChange} required />\r\n          </label>\r\n\r\n          <label className={css.label}>\r\n            Number\r\n            <input\r\n              className={css.input}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <input type=\"submit\" value=\"Add contact\" className={css.inputBtn} />\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.onAddContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport default filterContacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport css from './Filter.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport filterContacts from '../../redux/filterAct';\r\nimport contactsSelectors from '../../redux/contacts-selectors';\r\n\r\nconst Filter = ({filter, onChangeFilter, contacts}) => {\r\n  return (\r\n   <CSSTransition\r\n   in={contacts.length > 0}\r\n   appear={true}\r\n   timeout={250}\r\n   classNames={css}\r\n   unmountOnExit\r\n   >\r\n      <div className={css.filter}>\r\n    <label className={css.label}>\r\n    Find contacts by name\r\n    <input \r\n    type=\"text\" \r\n    className={css.input} \r\n    value={filter}\r\n    onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n    </label>\r\n    </div>\r\n   </CSSTransition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: contactsSelectors.getFilter(state),\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: filterContacts,\r\n};\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ])\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from '../ContactListItem/ContactItem.module.css'\r\n\r\nimport {connect} from 'react-redux';\r\nimport contactsOperations from '../../../redux/contactsOperations';\r\nimport contactsSelectors from '../../../redux/contacts-selectors';\r\n\r\nconst ContactItem = ({name, number, removeContact}) => {\r\n return (\r\n  <li className={css.item}>\r\n  <p className={css.itemText}>{name}:</p>\r\n  <p className={css.itemText}>{number}</p>\r\n    <button \r\n    type=\"button\"\r\n    className={css.btn} \r\n    onClick={removeContact}>\r\n      Delete\r\n    </button>\r\n</li>\r\n );\r\n};\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const item = contactsSelectors.getItemById(state, ownProps.id);\r\n  return {\r\n    ...item\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(contactsOperations.removeContact(ownProps.id)),\r\n});\r\n\r\nContactItem.propTypes = {\r\n  removeContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string\r\n};\r\n\r\nexport default connect(mapState, mapDispatchToProps)(ContactItem);\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport ContactItem from \"./ContactListItem/ContactItem\"\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\r\nimport css from \"../ContactsList/ContactsList.module.css\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport contactsSelectors from '../../redux/contacts-selectors';\r\n\r\nconst ContactsList = ({findContacts}) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={css.list}>\r\n      {findContacts.map(({id}) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={css}>\r\n            <ContactItem id={id} />\r\n          </CSSTransition>\r\n        )\r\n      })}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  findContacts: contactsSelectors.getFilteredContacts(state),\r\n})\r\n\r\nContactsList.propTypes = {\r\n  findContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  id: PropTypes.string,\r\n}\r\nexport default connect(mapStateToProps)(ContactsList)\r\n","import React, {Component} from \"react\"\r\nimport Title from \"../../shared/Title/Title\"\r\nimport ContactForm from \"../ContactForm/ContactForm\"\r\nimport Filter from \"../Filter/Filter\"\r\nimport ContactsList from \"../ContactsList/ContactsList\"\r\nimport \"./App.css\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport contactsOperations from \"../../redux/contactsOperations\";\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Title />\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactsList />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchContacts: contactsOperations.fetchContacts,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import {createReducer} from \"@reduxjs/toolkit\"\r\nimport {\r\n  addContactsSuccess, \r\n  fetchContactsSuccess, \r\n  removeContactsSuccess\r\n} from \"./contactsAct\"\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload]\r\n}\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter((item) => item.id !== action.payload)\r\n}\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, action) => action.payload,\r\n  [addContactsSuccess]: onAddContact,\r\n  [removeContactsSuccess]: removeContact,\r\n})\r\n\r\nexport {contactsReducer}\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterContacts from './filterAct';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload\r\n});\r\n\r\nexport default filterReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './contactsReducer';\r\nimport filter from './filterReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter,\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}